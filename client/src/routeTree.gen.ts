/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as CloudImport } from './routes/cloud'
import { Route as IndexImport } from './routes/index'
import { Route as UncompletedPostIdImport } from './routes/uncompleted/$postId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const CloudRoute = CloudImport.update({
  id: '/cloud',
  path: '/cloud',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UncompletedPostIdRoute = UncompletedPostIdImport.update({
  id: '/uncompleted/$postId',
  path: '/uncompleted/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cloud': {
      id: '/cloud'
      path: '/cloud'
      fullPath: '/cloud'
      preLoaderRoute: typeof CloudImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/uncompleted/$postId': {
      id: '/uncompleted/$postId'
      path: '/uncompleted/$postId'
      fullPath: '/uncompleted/$postId'
      preLoaderRoute: typeof UncompletedPostIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cloud': typeof CloudRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AboutLazyRoute
  '/uncompleted/$postId': typeof UncompletedPostIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cloud': typeof CloudRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AboutLazyRoute
  '/uncompleted/$postId': typeof UncompletedPostIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cloud': typeof CloudRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/about': typeof AboutLazyRoute
  '/uncompleted/$postId': typeof UncompletedPostIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cloud'
    | '/login'
    | '/register'
    | '/about'
    | '/uncompleted/$postId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cloud'
    | '/login'
    | '/register'
    | '/about'
    | '/uncompleted/$postId'
  id:
    | '__root__'
    | '/'
    | '/cloud'
    | '/login'
    | '/register'
    | '/about'
    | '/uncompleted/$postId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CloudRoute: typeof CloudRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  AboutLazyRoute: typeof AboutLazyRoute
  UncompletedPostIdRoute: typeof UncompletedPostIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CloudRoute: CloudRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  AboutLazyRoute: AboutLazyRoute,
  UncompletedPostIdRoute: UncompletedPostIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cloud",
        "/login",
        "/register",
        "/about",
        "/uncompleted/$postId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cloud": {
      "filePath": "cloud.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/uncompleted/$postId": {
      "filePath": "uncompleted/$postId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
